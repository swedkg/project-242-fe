export const amd: {
  define: boolean;
  require: boolean;
};
export const applescript: {
  $: boolean;
  Application: boolean;
  Automation: boolean;
  Library: boolean;
  ObjC: boolean;
  ObjectSpecifier: boolean;
  Path: boolean;
  Progress: boolean;
  Ref: boolean;
  console: boolean;
  delay: boolean;
};
export const atomtest: {
  advanceClock: boolean;
  fakeClearInterval: boolean;
  fakeClearTimeout: boolean;
  fakeSetInterval: boolean;
  fakeSetTimeout: boolean;
  resetTimeouts: boolean;
  waitsForPromise: boolean;
};
export const browser: {
  AnalyserNode: boolean;
  Animation: boolean;
  AnimationEffectReadOnly: boolean;
  AnimationEffectTiming: boolean;
  AnimationEffectTimingReadOnly: boolean;
  AnimationEvent: boolean;
  AnimationPlaybackEvent: boolean;
  AnimationTimeline: boolean;
  ApplicationCache: boolean;
  ApplicationCacheErrorEvent: boolean;
  Attr: boolean;
  Audio: boolean;
  AudioBuffer: boolean;
  AudioBufferSourceNode: boolean;
  AudioContext: boolean;
  AudioDestinationNode: boolean;
  AudioListener: boolean;
  AudioNode: boolean;
  AudioParam: boolean;
  AudioProcessingEvent: boolean;
  AutocompleteErrorEvent: boolean;
  BarProp: boolean;
  BatteryManager: boolean;
  BeforeUnloadEvent: boolean;
  BiquadFilterNode: boolean;
  Blob: boolean;
  CDATASection: boolean;
  CSS: boolean;
  CSSAnimation: boolean;
  CSSFontFaceRule: boolean;
  CSSImportRule: boolean;
  CSSKeyframeRule: boolean;
  CSSKeyframesRule: boolean;
  CSSMediaRule: boolean;
  CSSPageRule: boolean;
  CSSRule: boolean;
  CSSRuleList: boolean;
  CSSStyleDeclaration: boolean;
  CSSStyleRule: boolean;
  CSSStyleSheet: boolean;
  CSSSupportsRule: boolean;
  CSSTransition: boolean;
  CSSUnknownRule: boolean;
  CSSViewportRule: boolean;
  Cache: boolean;
  CacheStorage: boolean;
  CanvasGradient: boolean;
  CanvasPattern: boolean;
  CanvasRenderingContext2D: boolean;
  ChannelMergerNode: boolean;
  ChannelSplitterNode: boolean;
  CharacterData: boolean;
  ClientRect: boolean;
  ClientRectList: boolean;
  ClipboardEvent: boolean;
  CloseEvent: boolean;
  Comment: boolean;
  CompositionEvent: boolean;
  ConvolverNode: boolean;
  Credential: boolean;
  CredentialsContainer: boolean;
  Crypto: boolean;
  CryptoKey: boolean;
  CustomEvent: boolean;
  DOMError: boolean;
  DOMException: boolean;
  DOMImplementation: boolean;
  DOMParser: boolean;
  DOMSettableTokenList: boolean;
  DOMStringList: boolean;
  DOMStringMap: boolean;
  DOMTokenList: boolean;
  DataTransfer: boolean;
  DataTransferItem: boolean;
  DataTransferItemList: boolean;
  Debug: boolean;
  DelayNode: boolean;
  DeviceMotionEvent: boolean;
  DeviceOrientationEvent: boolean;
  Document: boolean;
  DocumentFragment: boolean;
  DocumentTimeline: boolean;
  DocumentType: boolean;
  DragEvent: boolean;
  DynamicsCompressorNode: boolean;
  Element: boolean;
  ElementTimeControl: boolean;
  ErrorEvent: boolean;
  Event: boolean;
  EventSource: boolean;
  EventTarget: boolean;
  FederatedCredential: boolean;
  File: boolean;
  FileError: boolean;
  FileList: boolean;
  FileReader: boolean;
  FocusEvent: boolean;
  FontFace: boolean;
  FormData: boolean;
  GainNode: boolean;
  Gamepad: boolean;
  GamepadButton: boolean;
  GamepadEvent: boolean;
  HTMLAllCollection: boolean;
  HTMLAnchorElement: boolean;
  HTMLAppletElement: boolean;
  HTMLAreaElement: boolean;
  HTMLAudioElement: boolean;
  HTMLBRElement: boolean;
  HTMLBaseElement: boolean;
  HTMLBlockquoteElement: boolean;
  HTMLBodyElement: boolean;
  HTMLButtonElement: boolean;
  HTMLCanvasElement: boolean;
  HTMLCollection: boolean;
  HTMLContentElement: boolean;
  HTMLDListElement: boolean;
  HTMLDataListElement: boolean;
  HTMLDetailsElement: boolean;
  HTMLDialogElement: boolean;
  HTMLDirectoryElement: boolean;
  HTMLDivElement: boolean;
  HTMLDocument: boolean;
  HTMLElement: boolean;
  HTMLEmbedElement: boolean;
  HTMLFieldSetElement: boolean;
  HTMLFontElement: boolean;
  HTMLFormControlsCollection: boolean;
  HTMLFormElement: boolean;
  HTMLFrameElement: boolean;
  HTMLFrameSetElement: boolean;
  HTMLHRElement: boolean;
  HTMLHeadElement: boolean;
  HTMLHeadingElement: boolean;
  HTMLHtmlElement: boolean;
  HTMLIFrameElement: boolean;
  HTMLImageElement: boolean;
  HTMLInputElement: boolean;
  HTMLIsIndexElement: boolean;
  HTMLKeygenElement: boolean;
  HTMLLIElement: boolean;
  HTMLLabelElement: boolean;
  HTMLLayerElement: boolean;
  HTMLLegendElement: boolean;
  HTMLLinkElement: boolean;
  HTMLMapElement: boolean;
  HTMLMarqueeElement: boolean;
  HTMLMediaElement: boolean;
  HTMLMenuElement: boolean;
  HTMLMetaElement: boolean;
  HTMLMeterElement: boolean;
  HTMLModElement: boolean;
  HTMLOListElement: boolean;
  HTMLObjectElement: boolean;
  HTMLOptGroupElement: boolean;
  HTMLOptionElement: boolean;
  HTMLOptionsCollection: boolean;
  HTMLOutputElement: boolean;
  HTMLParagraphElement: boolean;
  HTMLParamElement: boolean;
  HTMLPictureElement: boolean;
  HTMLPreElement: boolean;
  HTMLProgressElement: boolean;
  HTMLQuoteElement: boolean;
  HTMLScriptElement: boolean;
  HTMLSelectElement: boolean;
  HTMLShadowElement: boolean;
  HTMLSourceElement: boolean;
  HTMLSpanElement: boolean;
  HTMLStyleElement: boolean;
  HTMLTableCaptionElement: boolean;
  HTMLTableCellElement: boolean;
  HTMLTableColElement: boolean;
  HTMLTableElement: boolean;
  HTMLTableRowElement: boolean;
  HTMLTableSectionElement: boolean;
  HTMLTemplateElement: boolean;
  HTMLTextAreaElement: boolean;
  HTMLTitleElement: boolean;
  HTMLTrackElement: boolean;
  HTMLUListElement: boolean;
  HTMLUnknownElement: boolean;
  HTMLVideoElement: boolean;
  HashChangeEvent: boolean;
  Headers: boolean;
  History: boolean;
  IDBCursor: boolean;
  IDBCursorWithValue: boolean;
  IDBDatabase: boolean;
  IDBEnvironment: boolean;
  IDBFactory: boolean;
  IDBIndex: boolean;
  IDBKeyRange: boolean;
  IDBObjectStore: boolean;
  IDBOpenDBRequest: boolean;
  IDBRequest: boolean;
  IDBTransaction: boolean;
  IDBVersionChangeEvent: boolean;
  Image: boolean;
  ImageBitmap: boolean;
  ImageData: boolean;
  InputEvent: boolean;
  InputMethodContext: boolean;
  IntersectionObserver: boolean;
  IntersectionObserverEntry: boolean;
  Intl: boolean;
  KeyboardEvent: boolean;
  KeyframeEffect: boolean;
  KeyframeEffectReadOnly: boolean;
  Location: boolean;
  MIDIAccess: boolean;
  MIDIConnectionEvent: boolean;
  MIDIInput: boolean;
  MIDIInputMap: boolean;
  MIDIMessageEvent: boolean;
  MIDIOutput: boolean;
  MIDIOutputMap: boolean;
  MIDIPort: boolean;
  MediaElementAudioSourceNode: boolean;
  MediaEncryptedEvent: boolean;
  MediaError: boolean;
  MediaKeyError: boolean;
  MediaKeyEvent: boolean;
  MediaKeyMessageEvent: boolean;
  MediaKeySession: boolean;
  MediaKeyStatusMap: boolean;
  MediaKeySystemAccess: boolean;
  MediaKeys: boolean;
  MediaList: boolean;
  MediaQueryList: boolean;
  MediaQueryListEvent: boolean;
  MediaRecorder: boolean;
  MediaSource: boolean;
  MediaStream: boolean;
  MediaStreamAudioDestinationNode: boolean;
  MediaStreamAudioSourceNode: boolean;
  MediaStreamEvent: boolean;
  MediaStreamTrack: boolean;
  MessageChannel: boolean;
  MessageEvent: boolean;
  MessagePort: boolean;
  MimeType: boolean;
  MimeTypeArray: boolean;
  MouseEvent: boolean;
  MutationEvent: boolean;
  MutationObserver: boolean;
  MutationRecord: boolean;
  NamedNodeMap: boolean;
  Navigator: boolean;
  Node: boolean;
  NodeFilter: boolean;
  NodeIterator: boolean;
  NodeList: boolean;
  Notification: boolean;
  OfflineAudioCompletionEvent: boolean;
  OfflineAudioContext: boolean;
  Option: boolean;
  OscillatorNode: boolean;
  PageTransitionEvent: boolean;
  PasswordCredential: boolean;
  Path2D: boolean;
  Performance: boolean;
  PerformanceEntry: boolean;
  PerformanceMark: boolean;
  PerformanceMeasure: boolean;
  PerformanceNavigation: boolean;
  PerformanceResourceTiming: boolean;
  PerformanceTiming: boolean;
  PeriodicWave: boolean;
  PermissionStatus: boolean;
  Permissions: boolean;
  Plugin: boolean;
  PluginArray: boolean;
  PopStateEvent: boolean;
  ProcessingInstruction: boolean;
  ProgressEvent: boolean;
  PromiseRejectionEvent: boolean;
  PushManager: boolean;
  PushSubscription: boolean;
  RTCIceCandidate: boolean;
  RTCPeerConnection: boolean;
  RTCSessionDescription: boolean;
  RadioNodeList: boolean;
  Range: boolean;
  ReadableByteStream: boolean;
  ReadableStream: boolean;
  Request: boolean;
  Response: boolean;
  SVGAElement: boolean;
  SVGAltGlyphDefElement: boolean;
  SVGAltGlyphElement: boolean;
  SVGAltGlyphItemElement: boolean;
  SVGAngle: boolean;
  SVGAnimateColorElement: boolean;
  SVGAnimateElement: boolean;
  SVGAnimateMotionElement: boolean;
  SVGAnimateTransformElement: boolean;
  SVGAnimatedAngle: boolean;
  SVGAnimatedBoolean: boolean;
  SVGAnimatedEnumeration: boolean;
  SVGAnimatedInteger: boolean;
  SVGAnimatedLength: boolean;
  SVGAnimatedLengthList: boolean;
  SVGAnimatedNumber: boolean;
  SVGAnimatedNumberList: boolean;
  SVGAnimatedPathData: boolean;
  SVGAnimatedPoints: boolean;
  SVGAnimatedPreserveAspectRatio: boolean;
  SVGAnimatedRect: boolean;
  SVGAnimatedString: boolean;
  SVGAnimatedTransformList: boolean;
  SVGAnimationElement: boolean;
  SVGCSSRule: boolean;
  SVGCircleElement: boolean;
  SVGClipPathElement: boolean;
  SVGColor: boolean;
  SVGColorProfileElement: boolean;
  SVGColorProfileRule: boolean;
  SVGComponentTransferFunctionElement: boolean;
  SVGCursorElement: boolean;
  SVGDefsElement: boolean;
  SVGDescElement: boolean;
  SVGDiscardElement: boolean;
  SVGDocument: boolean;
  SVGElement: boolean;
  SVGElementInstance: boolean;
  SVGElementInstanceList: boolean;
  SVGEllipseElement: boolean;
  SVGEvent: boolean;
  SVGExternalResourcesRequired: boolean;
  SVGFEBlendElement: boolean;
  SVGFEColorMatrixElement: boolean;
  SVGFEComponentTransferElement: boolean;
  SVGFECompositeElement: boolean;
  SVGFEConvolveMatrixElement: boolean;
  SVGFEDiffuseLightingElement: boolean;
  SVGFEDisplacementMapElement: boolean;
  SVGFEDistantLightElement: boolean;
  SVGFEDropShadowElement: boolean;
  SVGFEFloodElement: boolean;
  SVGFEFuncAElement: boolean;
  SVGFEFuncBElement: boolean;
  SVGFEFuncGElement: boolean;
  SVGFEFuncRElement: boolean;
  SVGFEGaussianBlurElement: boolean;
  SVGFEImageElement: boolean;
  SVGFEMergeElement: boolean;
  SVGFEMergeNodeElement: boolean;
  SVGFEMorphologyElement: boolean;
  SVGFEOffsetElement: boolean;
  SVGFEPointLightElement: boolean;
  SVGFESpecularLightingElement: boolean;
  SVGFESpotLightElement: boolean;
  SVGFETileElement: boolean;
  SVGFETurbulenceElement: boolean;
  SVGFilterElement: boolean;
  SVGFilterPrimitiveStandardAttributes: boolean;
  SVGFitToViewBox: boolean;
  SVGFontElement: boolean;
  SVGFontFaceElement: boolean;
  SVGFontFaceFormatElement: boolean;
  SVGFontFaceNameElement: boolean;
  SVGFontFaceSrcElement: boolean;
  SVGFontFaceUriElement: boolean;
  SVGForeignObjectElement: boolean;
  SVGGElement: boolean;
  SVGGeometryElement: boolean;
  SVGGlyphElement: boolean;
  SVGGlyphRefElement: boolean;
  SVGGradientElement: boolean;
  SVGGraphicsElement: boolean;
  SVGHKernElement: boolean;
  SVGICCColor: boolean;
  SVGImageElement: boolean;
  SVGLangSpace: boolean;
  SVGLength: boolean;
  SVGLengthList: boolean;
  SVGLineElement: boolean;
  SVGLinearGradientElement: boolean;
  SVGLocatable: boolean;
  SVGMPathElement: boolean;
  SVGMarkerElement: boolean;
  SVGMaskElement: boolean;
  SVGMatrix: boolean;
  SVGMetadataElement: boolean;
  SVGMissingGlyphElement: boolean;
  SVGNumber: boolean;
  SVGNumberList: boolean;
  SVGPaint: boolean;
  SVGPathElement: boolean;
  SVGPathSeg: boolean;
  SVGPathSegArcAbs: boolean;
  SVGPathSegArcRel: boolean;
  SVGPathSegClosePath: boolean;
  SVGPathSegCurvetoCubicAbs: boolean;
  SVGPathSegCurvetoCubicRel: boolean;
  SVGPathSegCurvetoCubicSmoothAbs: boolean;
  SVGPathSegCurvetoCubicSmoothRel: boolean;
  SVGPathSegCurvetoQuadraticAbs: boolean;
  SVGPathSegCurvetoQuadraticRel: boolean;
  SVGPathSegCurvetoQuadraticSmoothAbs: boolean;
  SVGPathSegCurvetoQuadraticSmoothRel: boolean;
  SVGPathSegLinetoAbs: boolean;
  SVGPathSegLinetoHorizontalAbs: boolean;
  SVGPathSegLinetoHorizontalRel: boolean;
  SVGPathSegLinetoRel: boolean;
  SVGPathSegLinetoVerticalAbs: boolean;
  SVGPathSegLinetoVerticalRel: boolean;
  SVGPathSegList: boolean;
  SVGPathSegMovetoAbs: boolean;
  SVGPathSegMovetoRel: boolean;
  SVGPatternElement: boolean;
  SVGPoint: boolean;
  SVGPointList: boolean;
  SVGPolygonElement: boolean;
  SVGPolylineElement: boolean;
  SVGPreserveAspectRatio: boolean;
  SVGRadialGradientElement: boolean;
  SVGRect: boolean;
  SVGRectElement: boolean;
  SVGRenderingIntent: boolean;
  SVGSVGElement: boolean;
  SVGScriptElement: boolean;
  SVGSetElement: boolean;
  SVGStopElement: boolean;
  SVGStringList: boolean;
  SVGStylable: boolean;
  SVGStyleElement: boolean;
  SVGSwitchElement: boolean;
  SVGSymbolElement: boolean;
  SVGTRefElement: boolean;
  SVGTSpanElement: boolean;
  SVGTests: boolean;
  SVGTextContentElement: boolean;
  SVGTextElement: boolean;
  SVGTextPathElement: boolean;
  SVGTextPositioningElement: boolean;
  SVGTitleElement: boolean;
  SVGTransform: boolean;
  SVGTransformList: boolean;
  SVGTransformable: boolean;
  SVGURIReference: boolean;
  SVGUnitTypes: boolean;
  SVGUseElement: boolean;
  SVGVKernElement: boolean;
  SVGViewElement: boolean;
  SVGViewSpec: boolean;
  SVGZoomAndPan: boolean;
  SVGZoomEvent: boolean;
  Screen: boolean;
  ScreenOrientation: boolean;
  ScriptProcessorNode: boolean;
  SecurityPolicyViolationEvent: boolean;
  Selection: boolean;
  ServiceWorker: boolean;
  ServiceWorkerContainer: boolean;
  ServiceWorkerRegistration: boolean;
  ShadowRoot: boolean;
  SharedKeyframeList: boolean;
  SharedWorker: boolean;
  SiteBoundCredential: boolean;
  SpeechSynthesisEvent: boolean;
  SpeechSynthesisUtterance: boolean;
  Storage: boolean;
  StorageEvent: boolean;
  StyleSheet: boolean;
  StyleSheetList: boolean;
  SubtleCrypto: boolean;
  Text: boolean;
  TextDecoder: boolean;
  TextEncoder: boolean;
  TextEvent: boolean;
  TextMetrics: boolean;
  TextTrack: boolean;
  TextTrackCue: boolean;
  TextTrackCueList: boolean;
  TextTrackList: boolean;
  TimeEvent: boolean;
  TimeRanges: boolean;
  Touch: boolean;
  TouchEvent: boolean;
  TouchList: boolean;
  TrackEvent: boolean;
  TransitionEvent: boolean;
  TreeWalker: boolean;
  UIEvent: boolean;
  URL: boolean;
  URLSearchParams: boolean;
  VTTCue: boolean;
  ValidityState: boolean;
  WaveShaperNode: boolean;
  WebGLActiveInfo: boolean;
  WebGLBuffer: boolean;
  WebGLContextEvent: boolean;
  WebGLFramebuffer: boolean;
  WebGLProgram: boolean;
  WebGLRenderbuffer: boolean;
  WebGLRenderingContext: boolean;
  WebGLShader: boolean;
  WebGLShaderPrecisionFormat: boolean;
  WebGLTexture: boolean;
  WebGLUniformLocation: boolean;
  WebSocket: boolean;
  WheelEvent: boolean;
  Window: boolean;
  Worker: boolean;
  XDomainRequest: boolean;
  XMLDocument: boolean;
  XMLHttpRequest: boolean;
  XMLHttpRequestEventTarget: boolean;
  XMLHttpRequestProgressEvent: boolean;
  XMLHttpRequestUpload: boolean;
  XMLSerializer: boolean;
  XPathEvaluator: boolean;
  XPathException: boolean;
  XPathExpression: boolean;
  XPathNSResolver: boolean;
  XPathNamespace: boolean;
  XPathResult: boolean;
  XSLTProcessor: boolean;
  addEventListener: boolean;
  alert: boolean;
  applicationCache: boolean;
  atob: boolean;
  blur: boolean;
  btoa: boolean;
  caches: boolean;
  cancelAnimationFrame: boolean;
  cancelIdleCallback: boolean;
  clearInterval: boolean;
  clearTimeout: boolean;
  clientInformation: boolean;
  close: boolean;
  closed: boolean;
  confirm: boolean;
  console: boolean;
  createImageBitmap: boolean;
  crypto: boolean;
  customElements: boolean;
  defaultStatus: boolean;
  defaultstatus: boolean;
  devicePixelRatio: boolean;
  dispatchEvent: boolean;
  document: boolean;
  event: boolean;
  external: boolean;
  fetch: boolean;
  find: boolean;
  focus: boolean;
  frameElement: boolean;
  frames: boolean;
  getComputedStyle: boolean;
  getSelection: boolean;
  history: boolean;
  indexedDB: boolean;
  innerHeight: boolean;
  innerWidth: boolean;
  length: boolean;
  localStorage: boolean;
  location: boolean;
  locationbar: boolean;
  matchMedia: boolean;
  menubar: boolean;
  moveBy: boolean;
  moveTo: boolean;
  name: boolean;
  navigator: boolean;
  offscreenBuffering: boolean;
  onbeforeunload: boolean;
  onblur: boolean;
  onerror: boolean;
  onfocus: boolean;
  onload: boolean;
  onresize: boolean;
  onunload: boolean;
  open: boolean;
  openDatabase: boolean;
  opener: boolean;
  opera: boolean;
  outerHeight: boolean;
  outerWidth: boolean;
  pageXOffset: boolean;
  pageYOffset: boolean;
  parent: boolean;
  performance: boolean;
  personalbar: boolean;
  postMessage: boolean;
  print: boolean;
  prompt: boolean;
  removeEventListener: boolean;
  requestAnimationFrame: boolean;
  requestIdleCallback: boolean;
  resizeBy: boolean;
  resizeTo: boolean;
  screen: boolean;
  screenLeft: boolean;
  screenTop: boolean;
  screenX: boolean;
  screenY: boolean;
  scroll: boolean;
  scrollBy: boolean;
  scrollTo: boolean;
  scrollX: boolean;
  scrollY: boolean;
  scrollbars: boolean;
  self: boolean;
  sessionStorage: boolean;
  setInterval: boolean;
  setTimeout: boolean;
  showModalDialog: boolean;
  speechSynthesis: boolean;
  status: boolean;
  statusbar: boolean;
  stop: boolean;
  styleMedia: boolean;
  toolbar: boolean;
  top: boolean;
  window: boolean;
};
export const builtin: {
  Array: boolean;
  ArrayBuffer: boolean;
  Boolean: boolean;
  DataView: boolean;
  Date: boolean;
  Error: boolean;
  EvalError: boolean;
  Float32Array: boolean;
  Float64Array: boolean;
  Function: boolean;
  Infinity: boolean;
  Int16Array: boolean;
  Int32Array: boolean;
  Int8Array: boolean;
  JSON: boolean;
  Map: boolean;
  Math: boolean;
  NaN: boolean;
  Number: boolean;
  Object: boolean;
  Promise: boolean;
  Proxy: boolean;
  RangeError: boolean;
  ReferenceError: boolean;
  Reflect: boolean;
  RegExp: boolean;
  Set: boolean;
  String: boolean;
  Symbol: boolean;
  SyntaxError: boolean;
  System: boolean;
  TypeError: boolean;
  URIError: boolean;
  Uint16Array: boolean;
  Uint32Array: boolean;
  Uint8Array: boolean;
  Uint8ClampedArray: boolean;
  WeakMap: boolean;
  WeakSet: boolean;
  decodeURI: boolean;
  decodeURIComponent: boolean;
  encodeURI: boolean;
  encodeURIComponent: boolean;
  escape: boolean;
  hasOwnProperty: boolean;
  isFinite: boolean;
  isNaN: boolean;
  isPrototypeOf: boolean;
  parseFloat: boolean;
  parseInt: boolean;
  propertyIsEnumerable: boolean;
  toLocaleString: boolean;
  toString: boolean;
  undefined: boolean;
  unescape: boolean;
  valueOf: boolean;
};
export const commonjs: {
  exports: boolean;
  global: boolean;
  module: boolean;
  require: boolean;
};
export const couch: {
  emit: boolean;
  exports: boolean;
  getRow: boolean;
  log: boolean;
  module: boolean;
  provides: boolean;
  require: boolean;
  respond: boolean;
  send: boolean;
  start: boolean;
  sum: boolean;
};
export const embertest: {
  andThen: boolean;
  click: boolean;
  currentPath: boolean;
  currentRouteName: boolean;
  currentURL: boolean;
  fillIn: boolean;
  find: boolean;
  findWithAssert: boolean;
  keyEvent: boolean;
  pauseTest: boolean;
  resumeTest: boolean;
  triggerEvent: boolean;
  visit: boolean;
};
export const es5: {
  Array: boolean;
  Boolean: boolean;
  Date: boolean;
  Error: boolean;
  EvalError: boolean;
  Function: boolean;
  Infinity: boolean;
  JSON: boolean;
  Math: boolean;
  NaN: boolean;
  Number: boolean;
  Object: boolean;
  RangeError: boolean;
  ReferenceError: boolean;
  RegExp: boolean;
  String: boolean;
  SyntaxError: boolean;
  TypeError: boolean;
  URIError: boolean;
  decodeURI: boolean;
  decodeURIComponent: boolean;
  encodeURI: boolean;
  encodeURIComponent: boolean;
  escape: boolean;
  hasOwnProperty: boolean;
  isFinite: boolean;
  isNaN: boolean;
  isPrototypeOf: boolean;
  parseFloat: boolean;
  parseInt: boolean;
  propertyIsEnumerable: boolean;
  toLocaleString: boolean;
  toString: boolean;
  undefined: boolean;
  unescape: boolean;
  valueOf: boolean;
};
export const es6: {
  Array: boolean;
  ArrayBuffer: boolean;
  Boolean: boolean;
  DataView: boolean;
  Date: boolean;
  Error: boolean;
  EvalError: boolean;
  Float32Array: boolean;
  Float64Array: boolean;
  Function: boolean;
  Infinity: boolean;
  Int16Array: boolean;
  Int32Array: boolean;
  Int8Array: boolean;
  JSON: boolean;
  Map: boolean;
  Math: boolean;
  NaN: boolean;
  Number: boolean;
  Object: boolean;
  Promise: boolean;
  Proxy: boolean;
  RangeError: boolean;
  ReferenceError: boolean;
  Reflect: boolean;
  RegExp: boolean;
  Set: boolean;
  String: boolean;
  Symbol: boolean;
  SyntaxError: boolean;
  System: boolean;
  TypeError: boolean;
  URIError: boolean;
  Uint16Array: boolean;
  Uint32Array: boolean;
  Uint8Array: boolean;
  Uint8ClampedArray: boolean;
  WeakMap: boolean;
  WeakSet: boolean;
  decodeURI: boolean;
  decodeURIComponent: boolean;
  encodeURI: boolean;
  encodeURIComponent: boolean;
  escape: boolean;
  hasOwnProperty: boolean;
  isFinite: boolean;
  isNaN: boolean;
  isPrototypeOf: boolean;
  parseFloat: boolean;
  parseInt: boolean;
  propertyIsEnumerable: boolean;
  toLocaleString: boolean;
  toString: boolean;
  undefined: boolean;
  unescape: boolean;
  valueOf: boolean;
};
export const greasemonkey: {
  GM_addStyle: boolean;
  GM_deleteValue: boolean;
  GM_getResourceText: boolean;
  GM_getResourceURL: boolean;
  GM_getValue: boolean;
  GM_info: boolean;
  GM_listValues: boolean;
  GM_log: boolean;
  GM_openInTab: boolean;
  GM_registerMenuCommand: boolean;
  GM_setClipboard: boolean;
  GM_setValue: boolean;
  GM_xmlhttpRequest: boolean;
  unsafeWindow: boolean;
};
export const jasmine: {
  afterAll: boolean;
  afterEach: boolean;
  beforeAll: boolean;
  beforeEach: boolean;
  describe: boolean;
  expect: boolean;
  fail: boolean;
  fdescribe: boolean;
  fit: boolean;
  it: boolean;
  jasmine: boolean;
  pending: boolean;
  runs: boolean;
  spyOn: boolean;
  spyOnProperty: boolean;
  waits: boolean;
  waitsFor: boolean;
  xdescribe: boolean;
  xit: boolean;
};
export const jest: {
  afterAll: boolean;
  afterEach: boolean;
  beforeAll: boolean;
  beforeEach: boolean;
  check: boolean;
  describe: boolean;
  expect: boolean;
  fdescribe: boolean;
  fit: boolean;
  gen: boolean;
  it: boolean;
  jest: boolean;
  pit: boolean;
  require: boolean;
  test: boolean;
  xdescribe: boolean;
  xit: boolean;
  xtest: boolean;
};
export const jquery: {
  $: boolean;
  jQuery: boolean;
};
export const meteor: {
  $: boolean;
  Accounts: boolean;
  AccountsClient: boolean;
  AccountsCommon: boolean;
  AccountsServer: boolean;
  App: boolean;
  Assets: boolean;
  Blaze: boolean;
  Cordova: boolean;
  DDP: boolean;
  DDPRateLimiter: boolean;
  DDPServer: boolean;
  Deps: boolean;
  EJSON: boolean;
  Email: boolean;
  HTTP: boolean;
  Log: boolean;
  Match: boolean;
  Meteor: boolean;
  Mongo: boolean;
  MongoInternals: boolean;
  Npm: boolean;
  Package: boolean;
  Plugin: boolean;
  Random: boolean;
  ReactiveDict: boolean;
  ReactiveVar: boolean;
  Router: boolean;
  ServiceConfiguration: boolean;
  Session: boolean;
  Spacebars: boolean;
  Template: boolean;
  Tinytest: boolean;
  Tracker: boolean;
  UI: boolean;
  Utils: boolean;
  WebApp: boolean;
  WebAppInternals: boolean;
  check: boolean;
  process: boolean;
  share: boolean;
};
export const mocha: {
  after: boolean;
  afterEach: boolean;
  before: boolean;
  beforeEach: boolean;
  context: boolean;
  describe: boolean;
  it: boolean;
  mocha: boolean;
  run: boolean;
  setup: boolean;
  specify: boolean;
  suite: boolean;
  suiteSetup: boolean;
  suiteTeardown: boolean;
  teardown: boolean;
  test: boolean;
  xcontext: boolean;
  xdescribe: boolean;
  xit: boolean;
  xspecify: boolean;
};
export const mongo: {
  BulkWriteResult: boolean;
  ISODate: boolean;
  Mongo: boolean;
  NumberInt: boolean;
  NumberLong: boolean;
  ObjectId: boolean;
  PlanCache: boolean;
  UUID: boolean;
  WriteResult: boolean;
  cat: boolean;
  cd: boolean;
  connect: boolean;
  db: boolean;
  getHostName: boolean;
  getMemInfo: boolean;
  hostname: boolean;
  listFiles: boolean;
  load: boolean;
  ls: boolean;
  md5sumFile: boolean;
  mkdir: boolean;
  print: boolean;
  printjson: boolean;
  pwd: boolean;
  quit: boolean;
  removeFile: boolean;
  rs: boolean;
  sh: boolean;
  version: boolean;
};
export const nashorn: {
  JSAdapter: boolean;
  Java: boolean;
  JavaImporter: boolean;
  Packages: boolean;
  com: boolean;
  edu: boolean;
  exit: boolean;
  java: boolean;
  javafx: boolean;
  javax: boolean;
  load: boolean;
  loadWithNewGlobal: boolean;
  org: boolean;
  print: boolean;
  quit: boolean;
};
export const node: {
  Buffer: boolean;
  GLOBAL: boolean;
  Intl: boolean;
  clearImmediate: boolean;
  clearInterval: boolean;
  clearTimeout: boolean;
  console: boolean;
  exports: boolean;
  global: boolean;
  module: boolean;
  process: boolean;
  require: boolean;
  root: boolean;
  setImmediate: boolean;
  setInterval: boolean;
  setTimeout: boolean;
};
export const phantomjs: {
  WebPage: boolean;
  console: boolean;
  exports: boolean;
  phantom: boolean;
  require: boolean;
};
export const prototypejs: {
  $: boolean;
  $$: boolean;
  $A: boolean;
  $F: boolean;
  $H: boolean;
  $R: boolean;
  $break: boolean;
  $continue: boolean;
  $w: boolean;
  Abstract: boolean;
  Ajax: boolean;
  Autocompleter: boolean;
  Builder: boolean;
  Class: boolean;
  Control: boolean;
  Draggable: boolean;
  Draggables: boolean;
  Droppables: boolean;
  Effect: boolean;
  Element: boolean;
  Enumerable: boolean;
  Event: boolean;
  Field: boolean;
  Form: boolean;
  Hash: boolean;
  Insertion: boolean;
  ObjectRange: boolean;
  PeriodicalExecuter: boolean;
  Position: boolean;
  Prototype: boolean;
  Scriptaculous: boolean;
  Selector: boolean;
  Sortable: boolean;
  SortableObserver: boolean;
  Sound: boolean;
  Template: boolean;
  Toggle: boolean;
  Try: boolean;
};
export const protractor: {
  $: boolean;
  $$: boolean;
  By: boolean;
  DartObject: boolean;
  browser: boolean;
  by: boolean;
  element: boolean;
  protractor: boolean;
};
export const qunit: {
  QUnit: boolean;
  asyncTest: boolean;
  deepEqual: boolean;
  equal: boolean;
  expect: boolean;
  module: boolean;
  notDeepEqual: boolean;
  notEqual: boolean;
  notOk: boolean;
  notPropEqual: boolean;
  notStrictEqual: boolean;
  ok: boolean;
  propEqual: boolean;
  raises: boolean;
  start: boolean;
  stop: boolean;
  strictEqual: boolean;
  test: boolean;
  throws: boolean;
};
export const rhino: {
  Packages: boolean;
  defineClass: boolean;
  deserialize: boolean;
  gc: boolean;
  help: boolean;
  importClass: boolean;
  importPackage: boolean;
  java: boolean;
  load: boolean;
  loadClass: boolean;
  print: boolean;
  quit: boolean;
  readFile: boolean;
  readUrl: boolean;
  runCommand: boolean;
  seal: boolean;
  serialize: boolean;
  spawn: boolean;
  sync: boolean;
  toint32: boolean;
  version: boolean;
};
export const serviceworker: {
  Cache: boolean;
  CacheStorage: boolean;
  Client: boolean;
  Clients: boolean;
  ExtendableEvent: boolean;
  ExtendableMessageEvent: boolean;
  FetchEvent: boolean;
  ServiceWorker: boolean;
  ServiceWorkerContainer: boolean;
  ServiceWorkerGlobalScope: boolean;
  ServiceWorkerMessageEvent: boolean;
  ServiceWorkerRegistration: boolean;
  WindowClient: boolean;
  caches: boolean;
  clients: boolean;
  importScripts: boolean;
  registration: boolean;
  self: boolean;
  skipWaiting: boolean;
};
export const shelljs: {
  cat: boolean;
  cd: boolean;
  chmod: boolean;
  config: boolean;
  cp: boolean;
  dirs: boolean;
  echo: boolean;
  env: boolean;
  error: boolean;
  exec: boolean;
  exit: boolean;
  find: boolean;
  grep: boolean;
  ln: boolean;
  ls: boolean;
  mkdir: boolean;
  mv: boolean;
  popd: boolean;
  pushd: boolean;
  pwd: boolean;
  rm: boolean;
  sed: boolean;
  set: boolean;
  target: boolean;
  tempdir: boolean;
  test: boolean;
  touch: boolean;
  which: boolean;
};
export const webextensions: {
  browser: boolean;
  chrome: boolean;
  opr: boolean;
};
export const worker: {
  Blob: boolean;
  BroadcastChannel: boolean;
  Cache: boolean;
  FileReaderSync: boolean;
  FormData: boolean;
  Headers: boolean;
  IDBCursor: boolean;
  IDBCursorWithValue: boolean;
  IDBDatabase: boolean;
  IDBFactory: boolean;
  IDBIndex: boolean;
  IDBKeyRange: boolean;
  IDBObjectStore: boolean;
  IDBOpenDBRequest: boolean;
  IDBRequest: boolean;
  IDBTransaction: boolean;
  IDBVersionChangeEvent: boolean;
  ImageData: boolean;
  MessageChannel: boolean;
  MessagePort: boolean;
  Notification: boolean;
  Performance: boolean;
  PerformanceEntry: boolean;
  PerformanceMark: boolean;
  PerformanceMeasure: boolean;
  PerformanceNavigation: boolean;
  PerformanceResourceTiming: boolean;
  PerformanceTiming: boolean;
  Promise: boolean;
  Request: boolean;
  Response: boolean;
  ServiceWorkerRegistration: boolean;
  TextDecoder: boolean;
  TextEncoder: boolean;
  URL: boolean;
  URLSearchParams: boolean;
  WebSocket: boolean;
  Worker: boolean;
  XMLHttpRequest: boolean;
  applicationCache: boolean;
  atob: boolean;
  btoa: boolean;
  caches: boolean;
  clearInterval: boolean;
  clearTimeout: boolean;
  close: boolean;
  console: boolean;
  fetch: boolean;
  importScripts: boolean;
  indexedDB: boolean;
  location: boolean;
  name: boolean;
  navigator: boolean;
  onclose: boolean;
  onconnect: boolean;
  onerror: boolean;
  onlanguagechange: boolean;
  onmessage: boolean;
  onoffline: boolean;
  ononline: boolean;
  onrejectionhandled: boolean;
  onunhandledrejection: boolean;
  performance: boolean;
  postMessage: boolean;
  self: boolean;
  setInterval: boolean;
  setTimeout: boolean;
};
export const wsh: {
  ActiveXObject: boolean;
  Enumerator: boolean;
  GetObject: boolean;
  ScriptEngine: boolean;
  ScriptEngineBuildVersion: boolean;
  ScriptEngineMajorVersion: boolean;
  ScriptEngineMinorVersion: boolean;
  VBArray: boolean;
  WSH: boolean;
  WScript: boolean;
  XDomainRequest: boolean;
};
export const yui: {
  Y: boolean;
  YUI: boolean;
  YUI_config: boolean;
};
